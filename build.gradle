plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.flyerzrule.mc.customtags'
version = '1.7'
def javaVersion = JavaVersion.VERSION_21
def encoding = 'UTF-8'

repositories {
    mavenLocal()
    gradlePluginPortal()
    mavenCentral()
    maven {
        name 'papermc-repo'
        url 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name 'xenondevs'
        url 'https://repo.xenondevs.xyz/releases'
    }
    maven { 
        url 'https://jitpack.io' 
    }
    maven {
        url 'https://maven.pkg.github.com/KillionRevival/KillionCommons'
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    maven {
        name 'roinujnosde-repo'
        url 'https://repo.roinujnosde.me/releases/'
    }
    maven {
        url 'https://maven.pkg.github.com/KillionRevival/Reincarceration'
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'co.killionrevival:killioncommons:3.1-SNAPSHOT'
    shadow 'xyz.xenondevs.invui:invui:1.33'
    shadow 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7.1'
    compileOnly 'net.md-5:bungeecord-chat:1.20-R0.2'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly 'net.sacredlabyrinth.phaed.simpleclans:SimpleClans:2.19.2'
    compileOnly 'org.kif:reincarceration:1.1-SNAPSHOT'
}

java {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

tasks.withType(JavaCompile) {
    options.encoding = encoding
}

tasks.processResources {
    filesMatching('plugin.yml') {
        expand version: project.version
    }
}

tasks.assemble {
    dependsOn(tasks.shadowJar)
}

tasks.build {
    dependsOn(tasks.shadowJar)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId 'customtags'
        }
    }
    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri('https://maven.pkg.github.com/KillionRevival/CustomTags')
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv('GITHUB_ACTOR')
                password = project.findProperty("gpr.key") ?: System.getenv('GITHUB_TOKEN')
            }
        }
    }
}

shadowJar {
  configurations = [project.configurations.shadow]
  archiveBaseName.set(project.name)
  archiveVersion.set(project.version)
  archiveClassifier.set('')
}

